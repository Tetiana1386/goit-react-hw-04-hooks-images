{"version":3,"sources":["services/apiService.js","component/Container/Container.js","component/Searchbar/Searchbar.js","component/ImageGalleryItem/ImageGalleryItem.js","component/ImageGallery/ImageGallery.js","component/Button/Button.js","component/Loader/Loader.js","component/Modal/Modal.js","component/Error/no_result.jpeg","component/Error/Error.js","App.js","index.js"],"names":["axios","defaults","baseURL","params","key","image_type","orientation","per_page","fetchImages","query","page","a","get","q","data","hits","console","log","Container","children","className","Searchbar","onHandleSubmit","useState","setQuery","onSubmit","e","preventDefault","trim","toast","info","type","autoComplete","autoFocus","placeholder","value","onChange","target","ImageGalleryItem","webformatURL","largeImageURL","tags","onOpenModal","src","alt","onClick","ImageGallery","images","map","id","Button","onLoadMore","LoaderComponent","color","height","width","timeout","modalRoot","document","querySelector","Modal","onToggleModal","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","currentTarget","ErrorComponent","texterror","role","errorImage","text","App","setImages","setPage","isLoading","setIsLoading","setLargeImageURL","showModal","setShowModal","error","setError","request","length","prevImages","fetchGallary","toggleModal","scrollPage","scroll","scrollToBottom","newQuery","dataset","source","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f835e97d.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\naxios.defaults.params = {\n  key: '21693934-b739dad2632fdbf7884e4d0a2',\n  image_type: 'photo',\n  orientation: 'horizontal',\n  per_page: 12,\n};\n\nconst fetchImages = async (query, page) => {\n  try {\n    const { data } = await axios.get('', {\n      params: {\n        q: query,\n        page,\n      },\n    });\n    return data.hits;\n  } catch (error) {\n    console.log('error', error);\n    return [];\n  }\n};\n\nexport default fetchImages;\n\n//const BASE_URL = 'https://pixabay.com/api';\n//const API_KEY = '21693934-b739dad2632fdbf7884e4d0a2';\n\n//const fetchImages = async (query, page) => {\n//const { data } = await axios.get(\n//`${BASE_URL}/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n//);\n//return data.hits;\n//};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Container.css';\n\nfunction Container({ children }) {\n  return <div className=\"Container\">{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Searchbar.css';\n\nfunction Searchbar({ onHandleSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query.trim()) {\n      return toast.info('Please enter a value for search images!');\n    }\n    onHandleSubmit(query);\n    setQuery('');\n  };\n\n  const handleChangeQuery = ({ target }) => {\n    setQuery(target.value);\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onHandleSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.css';\n\nfunction ImageGalleryItem({ webformatURL, largeImageURL, tags, onOpenModal }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        className=\"ImageGalleryItem-image\"\n        src={webformatURL}\n        alt={tags}\n        data-source={largeImageURL}\n        onClick={onOpenModal}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport './ImageGallery.css';\n\nfunction ImageGallery({ images, onOpenModal }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          tags={tags}\n          onOpenModal={onOpenModal}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\n\nfunction Button({ onLoadMore }) {\n  return (\n    <div className=\"Button_wrapper\">\n      <button type=\"button\" className=\"Button\" onClick={onLoadMore}>\n        Load more\n      </button>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './Loader.css';\n\nfunction LoaderComponent() {\n  return (\n    <div className=\"Overlay\">\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={0}\n      />\n    </div>\n  );\n}\n\nexport default LoaderComponent;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './Modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ largeImageURL, onToggleModal }) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onToggleModal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onToggleModal]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onToggleModal();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={largeImageURL} alt=\"\" />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onToggleModal: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/no_result.1fae5933.jpeg\";","import PropTypes from 'prop-types';\nimport errorImage from './no_result.jpeg';\nimport './Error.css';\n\nfunction ErrorComponent({ texterror }) {\n  return (\n    <div role=\"alert\" className=\"Wrapper\">\n      <img src={errorImage} width=\"550\" alt=\"no_res\" />\n      <p text={texterror} className=\"Text\">\n        {texterror}\n      </p>\n    </div>\n  );\n}\n\nErrorComponent.propTypes = {\n  texterror: PropTypes.string.isRequired,\n};\n\nexport default ErrorComponent;\n","import React, { useState, useEffect } from 'react';\nimport fetchImages from './services/apiService';\nimport Container from './component/Container';\nimport Searchbar from './component/Searchbar';\nimport ImageGallery from './component/ImageGallery';\nimport Button from './component/Button';\nimport LoaderComponent from './component/Loader';\nimport Modal from './component/Modal';\nimport ErrorComponent from './component/Error';\nimport { ToastContainer } from 'react-toastify';\nimport { animateScroll as scroll } from 'react-scroll';\nimport './App.css';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!query) return;\n\n    const fetchGallary = async () => {\n      try {\n        const request = await fetchImages(query, page);\n        if (request.length === 0) {\n          return setError(`No results were found for ${query}!`);\n        }\n        setImages(prevImages => [...prevImages, ...request]);\n      } catch (error) {\n        setError('Something went wrong. Try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchGallary();\n  }, [page, query]);\n\n  const renderImages = newQuery => {\n    setQuery(newQuery);\n    setImages([]);\n    setPage(1);\n    setError(null);\n    setIsLoading(true);\n  };\n\n  const onLoadMore = () => {\n    setIsLoading(true);\n    setPage(prevPage => prevPage + 1);\n    scrollPage();\n  };\n\n  const onOpenModal = e => {\n    setLargeImageURL(e.target.dataset.source);\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const scrollPage = () => {\n    scroll.scrollToBottom();\n  };\n\n  return (\n    <Container>\n      <Searchbar onHandleSubmit={renderImages} />\n\n      {error && <ErrorComponent texterror={error} />}\n\n      {isLoading && <LoaderComponent />}\n\n      {images.length > 0 && !error && (\n        <ImageGallery images={images} onOpenModal={onOpenModal} />\n      )}\n\n      {!isLoading && images.length > 0 && !error && (\n        <Button onLoadMore={onLoadMore} />\n      )}\n\n      {showModal && (\n        <Modal onToggleModal={toggleModal} largeImageURL={largeImageURL} />\n      )}\n\n      <ToastContainer />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}